@model Bs.Calendar.Mvc.ViewModels.BookHistoryVm
@{    
    ViewBag.Title = "Create Book";
    var btnName = "Create";
    var id = 0;
    var pathToImage = "binaryLogo.png";
    var bookTitle = "New book";

    if (Model != null && Model.BookId != 0)
    {
        if (File.Exists(Request.MapPath("~/Images/Books/" + Model.BookCode + ".jpg")))
        {
            pathToImage = "Books/" + Model.BookCode + ".jpg";
        }
        btnName = "Update";
        id = Model.BookId;
        bookTitle = Model.BookTitle;
        ViewBag.Title = "Edit Book";
    }      
}

<div class="row">
    <div class="text-center centered eight columns page-title">
        <h4>@ViewBag.Title</h4>
    </div>
</div>

@using (Html.BeginForm("FileUpload", "Book", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(book => book.BookId)                

    <div class="row">
        <div class="six columns">
            <fieldset>
                <legend>
                    <strong>@bookTitle</strong>
                </legend>
                <div class="centered seven columns danger alert">
                    @Html.ValidationSummary()
                </div>

                <div data-bind="with: $root.bookItem">

                    <div class="field">
                        @Html.LabelFor(model => model.BookCode, new { @class = "inline three columns" })
                        <input type="text" name="BookCode" data-bind="value: BookCode" class="wide text input" />
                    </div>

                    <div class="field">
                        @Html.LabelFor(model => model.BookTitle, new { @class = "inline three columns" })
                        <input type="text" name="BookTitle" data-bind="value: BookTitle" class="wide text input" />

                    </div>
                    <div class="field">
                        @Html.LabelFor(model => model.BookAuthor, new { @class = "inline three columns" })
                        <input type="text" name="BookAuthor" data-bind="value: BookAuthor" class="wide text input" />
                    </div>
                    <div class="field">
                        @Html.LabelFor(model => model.BookDescription, new { @class = "inline three columns" })
                        <textarea rows="7" name="BookDescription" style="font-size: 9pt; line-height: 1.5" data-bind="value: BookDescription" class="wide textarea input"></textarea>
                    </div>

                    <div class="field">
                        <div class="row">
                            <label class="inline three columns">Image</label>
                            <img height="150" width="150" src="~/Images/@pathToImage" alt="None"/>
                            <input class="eight columns" type="file" name="image" />
                        </div>
                        <div class="small default btn icon-right icon-upload" onclick="submit.click()">
                            <a href="#">upload</a>
                            <input style="visibility: hidden" type="submit" id="submit"/>
                        </div>
                    </div>
                </div>

                <div class="medium secondary btn three columns">
                    <input type="button" value="@btnName" data-bind="click: $root.saveRecords"/>
                </div>

                <div class="medium default btn push_one three columns">
                    @Html.ActionLink("Back", "Index")
                </div>

                @if (id != 0)
                {
                    <div class="medium info btn three columns push_one">
                        @Html.ActionLink("Delete", "Delete", new { id })
                    </div>
                }
            </fieldset>
        </div>
        @if (id != 0)
        {
            <div class="six columns">
                <div class="medium info btn icon-left icon-book three columns pull_right"
                    id="AddButton"
                    data-bind="click: show">
                    <a href="#">Add</a>
                </div>
                @Html.Partial("BookHistory")
            </div>
        }
    </div>
}

@section scripts
{
    <script src="/Scripts/jquery-2.0.2.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="../../Scripts/Books/BookHistoryList.js"></script>
    <script src="../../Scripts/Shared/moment.js"></script>
    <script type="text/javascript">
        $(document).ready(function ()
        {
            var model = new BookHistoryList(@Html.RawJson(@Model));
            ko.applyBindings(model);
        });
    </script>
}
