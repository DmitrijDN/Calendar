@using Bs.Calendar.Models.Bases;
@model Bs.Calendar.Mvc.ViewModels.RoomEditVm

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    string colorClassTemplate = "roomColor_{0}";
}

<h2>@Model.Extra.ViewTitle</h2>

@using (Html.BeginForm(@Model.Extra.CallAction, @Model.Extra.CallController, FormMethod.Post))
{
    
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.NumberOfPlaces)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.NumberOfPlaces)
            @Html.ValidationMessageFor(model => model.NumberOfPlaces)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Color)
        </div>
        <div class="editor-field">
            @Html.HiddenFor(model => model.Color)
            @Html.ValidationMessageFor(model => model.Color)
            
                <div id="color_cell" class="@string.Format(colorClassTemplate, @Model.Color)"></div>
            <div id="color_picker" class="color_picker_container">
                
                @for (int i = @BaseEntity.MIN_COLOR_VALUE; i <= @BaseEntity.MAX_COLOR_VALUE; ++ i )
                {
                    <div class="@string.Format(colorClassTemplate, i)"></div>
                }

            </div>
            
            <div class="justDivider"></div>
        </div>

        <p>
            <input type="submit" value="Accept" />
        </p>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
