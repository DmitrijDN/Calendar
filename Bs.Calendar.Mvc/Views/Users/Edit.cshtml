@model Bs.Calendar.Mvc.ViewModels.UserEditVm
@{
    
    var userRoles = (from object role in Enum.GetValues(typeof(Bs.Calendar.Models.Roles)) select role.ToString()).ToList();
    var userId = 0;
    var btnName = "Create";
    if (Model != null && Model.UserId != 0)
    {
        userId = Model.UserId;
        ViewBag.Title = "Edit current user";
        btnName = "Update";
    }
    else
    {
        ViewBag.Title = "Create new user";
    }
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="row">
    <fieldset class="ten columns">
        <legend>
            <h2>User</h2>
        </legend>
        
        @Html.Hidden("UserId", userId)
        
        <div>
            @Html.LabelFor(user => user.FirstName)
            @*<label for=@Model.FirstName class="success label"></label>*@
        </div>
        <div>
            @Html.EditorFor(user => user.FirstName)
            @Html.ValidationMessageFor(user => user.FirstName)
        </div>

        <div>
            @Html.LabelFor(user => user.LastName)
        </div>
        <div>
            @Html.EditorFor(user => user.LastName)
            @Html.ValidationMessageFor(user => user.LastName)
        </div>

        <div>
            @Html.LabelFor(user => user.Email)
        </div>
        <div>
            @Html.EditorFor(user => user.Email)
            @Html.ValidationMessageFor(user => user.Email)
        </div>

        <div>
            @Html.LabelFor(model => model.Role)
            @Html.DropDownListFor(user => user.Role, new SelectList(userRoles))
        </div>
                
        <p>
            <input type="submit" value=@btnName /> | @Html.ActionLink("Back to the list", "Index")
        </p>
    </fieldset>
        </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}