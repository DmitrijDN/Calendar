@model Bs.Calendar.Mvc.ViewModels.UsersVm
@{
    var ajaxOptions = new AjaxOptions
    {
        UpdateTargetId = "user-table",
        HttpMethod = "Get"
    };
}
@if (!Model.Users.Any())
{
    <div class="danger alert centered four columns">Sorry, no such user!</div>
}
else
{
    <table>
        <thead>
            <tr>
                <th>@Html.AjaxSortLink(@Model.PagingVm, "Name", ajaxOptions)</th>
                <th>@Html.AjaxSortLink(@Model.PagingVm, "E-mail", ajaxOptions)</th>
                <th>@Html.AjaxSortLink(@Model.PagingVm, "State", ajaxOptions)</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model.Users)
            {
                <tr>
                    <td>@user.FirstName @user.LastName</td>      
                    <td>@user.Email</td>
                    <td>@user.LiveState</td>
                    <td>           
                        <div class="medium default btn icon-right icon-pencil">@Html.ActionLink("Edit", "Edit", new {id = user.Id})</div>
                        <div class="medium default btn icon-right icon-info">@Html.ActionLink("Details", "Details", new {id = user.Id})</div>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="row">
        <div class="two columns">
            @using (Ajax.BeginForm("List", "Users", ajaxOptions))
            {
                @Html.HiddenFor(user => user.PagingVm.SearchStr)
                @Html.HiddenFor(user => user.PagingVm.SortByStr)
                <div class="field">
                    <input class="text input" type="text" name="PagingVm.Page" placeholder="@Model.PagingVm.Page">
                </div>
            }
        </div>
            
        <div class="four columns">
            <div class="default alert  eight columns">
                <div>of @Model.PagingVm.TotalPages</div>
            </div>
        </div>

        <div class="primary label push_six two columns">
            @Html.AjaxPageLink(@Model.PagingVm, "Previous", @Model.PagingVm.Page - 1, ajaxOptions)
        </div>

        <div class="primary label two columns">
            @Html.AjaxPageLink(@Model.PagingVm, "Next", @Model.PagingVm.Page + 1, ajaxOptions)
        </div>
    </div>
}


